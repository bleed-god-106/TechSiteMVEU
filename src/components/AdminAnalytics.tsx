import React, { useState, useEffect } from "react";
import { 
  Package, Users, Newspaper, Star, ShoppingBag, TrendingUp, Eye,
  DollarSign, Calendar, Clock, Award, BarChart3, PieChart, Activity,
  RefreshCw, Zap, Target, ShoppingCart, CheckCircle, AlertCircle, UserCheck, Building, FileText
} from "lucide-react";
import { 
  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,
  PieChart as RechartsPieChart, Cell, BarChart, Bar, LineChart, Line, Pie
} from 'recharts';
import { format, subDays, parseISO } from 'date-fns';
import { ru } from 'date-fns/locale';
import { Table, TableHead, TableHeader, TableRow, TableBody, TableCell } from "./ui/table";
import { dataService } from '../services/supabaseData';
import Loading from './ui/loading';

// –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è toast
const toast = ({ title, description, variant }: any) => {
  if (variant === 'destructive') {
    alert(`–û—à–∏–±–∫–∞: ${description}`);
  } else {
    alert(`${title}: ${description}`);
  }
};

interface StatsData {
  // –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  totalUsers: number;
  totalProducts: number;
  totalOrders: number;
  totalReviews: number;
  totalNews: number;
  totalEmployees: number;
  totalDepartments: number;
  totalCategories: number;
  
  // –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  totalRevenue: number;
  monthlyRevenue: number;
  avgOrderValue: number;
  recentOrders: number;
  
  // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
  todayVisitors: number;
  orderStatusStats: Array<{ _id: string; count: number; statusRu?: string }>;
  topProducts: Array<{ _id: string; productName: string; totalSold: number; totalRevenue: number }>;
  weeklyUserRegistrations: Array<{ _id: string; count: number }>;
  weeklyOrders: Array<{ _id: string; count: number; revenue: number }>;
  deliveryStats: Array<{ _id: string; count: number; typeRu?: string }>;
  avgCartSize: number;
  lastUpdated: string;
}

// –¶–≤–µ—Ç–∞ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ - –±–æ–ª–µ–µ –º—è–≥–∫–∞—è –ø–∞–ª–∏—Ç—Ä–∞  
const CHART_COLORS = [
  '#64748B', // –°–µ—Ä–æ-—Å–∏–Ω–∏–π
  '#059669', // –ò–∑—É–º—Ä—É–¥–Ω—ã–π –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π
  '#D97706', // –Ø–Ω—Ç–∞—Ä–Ω—ã–π –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π
  '#DC2626', // –ö—Ä–∞—Å–Ω—ã–π –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π
  '#7C3AED', // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π
  '#0891B2', // –¶–∏–∞–Ω –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π
  '#EA580C', // –û—Ä–∞–Ω–∂–µ–≤—ã–π –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π
  '#65A30D'  // –õ–∞–π–º –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π
];

// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤ - –±–æ–ª–µ–µ –º—è–≥–∫–∏–µ —Ç–æ–Ω–∞
const STATUS_COLORS = {
  'pending': '#F59E0B',     // –Ø–Ω—Ç–∞—Ä–Ω—ã–π
  'processing': '#3B82F6',  // –°–∏–Ω–∏–π 
  'shipped': '#8B5CF6',     // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
  'delivered': '#10B981',   // –ó–µ–ª–µ–Ω—ã–π
  'cancelled': '#EF4444',   // –ö—Ä–∞—Å–Ω—ã–π
  'confirmed': '#06B6D4'    // –¶–∏–∞–Ω
};

// –¶–≤–µ—Ç–∞ –¥–ª—è —Ç–∏–ø–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏ - –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–µ —Ç–æ–Ω–∞
const DELIVERY_COLORS = {
  'delivery': '#3B82F6',    // –°–∏–Ω–∏–π
  'pickup': '#10B981',      // –ó–µ–ª–µ–Ω—ã–π  
  'express': '#F59E0B'      // –Ø–Ω—Ç–∞—Ä–Ω—ã–π
};

export default function AdminAnalytics() {
  const [stats, setStats] = useState<StatsData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [autoRefresh, setAutoRefresh] = useState(true);
  const [lastRefresh, setLastRefresh] = useState<Date>(new Date());

  useEffect(() => {
    loadStats();
    
    // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    const interval = setInterval(() => {
      if (autoRefresh) {
        loadStats(false); // false = –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å loading –ø—Ä–∏ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
      }
    }, 30000);
    
    return () => clearInterval(interval);
  }, [autoRefresh]);

  const loadStats = async (showLoading = true) => {
    try {
      if (showLoading) setLoading(true);
      
      const statsData = await dataService.getStats();
      setStats(statsData);
      setLastRefresh(new Date());
      setError(null);
    } catch (err: any) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', err);
      setError(err.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    } finally {
      if (showLoading) setLoading(false);
    }
  };

  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'RUB',
      minimumFractionDigits: 0
    }).format(amount);
  };

  const formatDate = (dateString: string) => {
    return format(parseISO(dateString), 'dd MMM', { locale: ru });
  };

  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
  const prepareOrdersChartData = () => {
    console.log('üìä –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤:', stats?.weeklyOrders);
    
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –¥–Ω–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é
    const days = Array.from({ length: 7 }, (_, i) => {
      const date = subDays(new Date(), 6 - i);
      return format(date, 'yyyy-MM-dd');
    });
    
    if (!stats?.weeklyOrders || stats.weeklyOrders.length === 0) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö weeklyOrders, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ');
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
      return days.map(day => ({
        date: format(parseISO(day), 'dd.MM', { locale: ru }),
        orders: 0,
        revenue: 0
      }));
    }
    
    const chartData = days.map(day => {
      const orderData = stats.weeklyOrders.find(item => item._id === day);
      return {
        date: format(parseISO(day), 'dd.MM', { locale: ru }),
        orders: orderData?.count || 0,
        revenue: orderData?.revenue || 0
      };
    });
    
    console.log('‚úÖ –ì–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞:', chartData);
    return chartData;
  };

  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const prepareUserRegistrationsData = () => {
    console.log('üìä –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π:', stats?.weeklyUserRegistrations);
    
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –¥–Ω–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é
    const days = Array.from({ length: 7 }, (_, i) => {
      const date = subDays(new Date(), 6 - i);
      return format(date, 'yyyy-MM-dd');
    });
    
    if (!stats?.weeklyUserRegistrations || stats.weeklyUserRegistrations.length === 0) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö weeklyUserRegistrations, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ');
      return days.map(day => ({
        date: format(parseISO(day), 'dd.MM', { locale: ru }),
        registrations: 0
      }));
    }
    
    const chartData = days.map(day => {
      const regData = stats.weeklyUserRegistrations.find(item => item._id === day);
      return {
        date: format(parseISO(day), 'dd.MM', { locale: ru }),
        registrations: regData?.count || 0
      };
    });
    
    console.log('‚úÖ –ì–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π:', chartData);
    return chartData;
  };

  const prepareOrderStatusData = () => {
    // –ú–∞–ø–ø–∏–Ω–≥ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–µ
    const statusLabels: { [key: string]: string } = {
      'pending': '–û–∂–∏–¥–∞–Ω–∏–µ',
      'processing': '–û–±—Ä–∞–±–æ—Ç–∫–∞', 
      'shipped': '–î–æ—Å—Ç–∞–≤–∫–∞',
      'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ',
      'cancelled': '–û—Ç–º–µ–Ω–µ–Ω–æ',
      'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω'
    };

    if (!stats?.orderStatusStats || stats.orderStatusStats.length === 0) {
      return [
        { name: '–û–±—Ä–∞–±–æ—Ç–∫–∞', value: 0, status: 'processing' },
        { name: '–î–æ—Å—Ç–∞–≤–∫–∞', value: 0, status: 'shipped' },
        { name: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ', value: 0, status: 'delivered' },
        { name: '–û–∂–∏–¥–∞–Ω–∏–µ', value: 0, status: 'pending' }
      ];
    }
    
    return stats.orderStatusStats.map(item => ({
      name: item.statusRu || statusLabels[item._id] || item._id,
      value: item.count,
      status: item._id
    }));
  };

  const prepareDeliveryData = () => {
    // –ú–∞–ø–ø–∏–Ω–≥ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Ç–∏–ø–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–µ
    const deliveryLabels: { [key: string]: string } = {
      'delivery': '–î–æ—Å—Ç–∞–≤–∫–∞',
      'pickup': '–°–∞–º–æ–≤—ã–≤–æ–∑',
      'express': '–≠–∫—Å–ø—Ä–µ—Å—Å'
    };

    if (!stats?.deliveryStats || stats.deliveryStats.length === 0) {
      return [
        { name: '–î–æ—Å—Ç–∞–≤–∫–∞', value: 0, type: 'delivery' },
        { name: '–°–∞–º–æ–≤—ã–≤–æ–∑', value: 0, type: 'pickup' }
      ];
    }
    
    return stats.deliveryStats.map(item => ({
      name: item.typeRu || deliveryLabels[item._id] || item._id,
      value: item.count,
      type: item._id
    }));
  };

  if (loading && !stats) {
    return (
      <div className="p-6">
        <Loading message="–ó–∞–≥—Ä—É–∂–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É..." size="lg" />
      </div>
    );
  }

  if (error && !stats) {
    return (
      <div className="p-6">
        <div className="bg-red-50 border border-red-200 rounded-lg p-6 text-center">
          <AlertCircle className="mx-auto mb-4 text-red-500" size={48} />
          <h3 className="text-lg font-semibold text-red-800 mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏</h3>
          <p className="text-red-600 mb-4">{error}</p>
          <button
            onClick={() => loadStats()}
            className="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–æ–Ω—Ç—Ä–æ–ª–∞–º–∏ */}
      <div className="flex items-center justify-between">
    <div>
          <h2 className="text-3xl font-bold text-gray-900">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</h2>
          <p className="text-gray-600 mt-1">
            –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {lastRefresh.toLocaleTimeString('ru-RU')}
          </p>
        </div>
        
        <div className="flex items-center space-x-3">
          <label className="flex items-center space-x-2">
            <input
              type="checkbox"
              checked={autoRefresh}
              onChange={(e) => setAutoRefresh(e.target.checked)}
              className="rounded border-gray-300"
            />
            <span className="text-sm text-gray-600">–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</span>
          </label>
          
          <button
            onClick={() => loadStats()}
            disabled={loading}
            className="flex items-center space-x-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 transition-colors"
          >
            <RefreshCw className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />
            <span>–û–±–Ω–æ–≤–∏—Ç—å</span>
          </button>
        </div>
      </div>

      {error && stats && (
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <div className="flex items-center">
            <AlertCircle className="w-5 h-5 text-yellow-600 mr-2" />
            <p className="text-yellow-800 text-sm">
              –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {error}
            </p>
          </div>
        </div>
      )}

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div className="bg-blue-50 rounded-xl shadow-sm border p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-blue-600 text-sm font-medium">–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞</p>
              <p className="text-2xl font-bold text-blue-900 mt-1">{formatCurrency(stats?.totalRevenue || 0)}</p>
            </div>
            <div className="bg-blue-100 p-3 rounded-lg">
              <span className="text-blue-600 text-2xl font-bold">‚ÇΩ</span>
            </div>
          </div>
        </div>

        <div className="bg-green-50 rounded-xl shadow-sm border p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-green-600 text-sm font-medium">–í—ã—Ä—É—á–∫–∞ –∑–∞ –º–µ—Å—è—Ü</p>
              <p className="text-2xl font-bold text-green-900 mt-1">{formatCurrency(stats?.monthlyRevenue || 0)}</p>
            </div>
            <div className="bg-green-100 p-3 rounded-lg">
              <TrendingUp className="text-green-600" size={24} />
            </div>
          </div>
        </div>

        <div className="bg-purple-50 rounded-xl shadow-sm border p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-purple-600 text-sm font-medium">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</p>
              <p className="text-2xl font-bold text-purple-900 mt-1">{formatCurrency(stats?.avgOrderValue || 0)}</p>
            </div>
            <div className="bg-purple-100 p-3 rounded-lg">
              <ShoppingCart className="text-purple-600" size={24} />
            </div>
          </div>
        </div>

        <div className="bg-orange-50 rounded-xl shadow-sm border p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-orange-600 text-sm font-medium">–ó–∞–∫–∞–∑—ã (30 –¥–Ω–µ–π)</p>
              <p className="text-2xl font-bold text-orange-900 mt-1">{stats?.recentOrders || 0}</p>
            </div>
            <div className="bg-orange-100 p-3 rounded-lg">
              <Package className="text-orange-600" size={24} />
            </div>
          </div>
        </div>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-4">
        <div className="bg-white rounded-lg shadow-sm border p-4 text-center">
          <Users className="mx-auto text-blue-600 mb-2" size={24} />
          <p className="text-2xl font-bold text-gray-900">{stats?.totalUsers || 0}</p>
          <p className="text-sm text-gray-600">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</p>
        </div>

        <div className="bg-white rounded-lg shadow-sm border p-4 text-center">
          <Package className="mx-auto text-green-600 mb-2" size={24} />
          <p className="text-2xl font-bold text-gray-900">{stats?.totalProducts || 0}</p>
          <p className="text-sm text-gray-600">–¢–æ–≤–∞—Ä—ã</p>
        </div>

        <div className="bg-white rounded-lg shadow-sm border p-4 text-center">
          <ShoppingBag className="mx-auto text-purple-600 mb-2" size={24} />
          <p className="text-2xl font-bold text-gray-900">{stats?.totalOrders || 0}</p>
          <p className="text-sm text-gray-600">–ó–∞–∫–∞–∑—ã</p>
        </div>

        <div className="bg-white rounded-lg shadow-sm border p-4 text-center">
          <Star className="mx-auto text-yellow-600 mb-2" size={24} />
          <p className="text-2xl font-bold text-gray-900">{stats?.totalReviews || 0}</p>
          <p className="text-sm text-gray-600">–û—Ç–∑—ã–≤—ã</p>
        </div>

        <div className="bg-white rounded-lg shadow-sm border p-4 text-center">
          <UserCheck className="mx-auto text-indigo-600 mb-2" size={24} />
          <p className="text-2xl font-bold text-gray-900">{stats?.totalEmployees || 0}</p>
          <p className="text-sm text-gray-600">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</p>
        </div>

        <div className="bg-white rounded-lg shadow-sm border p-4 text-center">
          <Building className="mx-auto text-gray-600 mb-2" size={24} />
          <p className="text-2xl font-bold text-gray-900">{stats?.totalDepartments || 0}</p>
          <p className="text-sm text-gray-600">–û—Ç–¥–µ–ª—ã</p>
        </div>

        <div className="bg-white rounded-lg shadow-sm border p-4 text-center">
          <FileText className="mx-auto text-blue-600 mb-2" size={24} />
          <p className="text-2xl font-bold text-gray-900">{stats?.totalNews || 0}</p>
          <p className="text-sm text-gray-600">–ù–æ–≤–æ—Å—Ç–∏</p>
        </div>

        <div className="bg-white rounded-lg shadow-sm border p-4 text-center">
          <Eye className="mx-auto text-red-600 mb-2" size={24} />
          <p className="text-2xl font-bold text-gray-900">{stats?.todayVisitors || 0}</p>
          <p className="text-sm text-gray-600">–ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏</p>
        </div>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∏–∑–Ω–µ—Å-–º–µ—Ç—Ä–∏–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div className="bg-white rounded-xl shadow-sm border p-6 hover:shadow-md transition-shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</p>
              <p className="text-2xl font-bold text-emerald-600">{formatCurrency(stats?.avgOrderValue || 0)}</p>
              <p className="text-xs text-gray-500 mt-1">–∑–∞ –∑–∞–∫–∞–∑</p>
            </div>
            <Target className="text-emerald-600" size={24} />
          </div>
        </div>

        <div className="bg-white rounded-xl shadow-sm border p-6 hover:shadow-md transition-shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">–ù–æ–≤–æ—Å—Ç–∏</p>
              <p className="text-2xl font-bold text-purple-600">{stats?.totalNews || 0}</p>
            </div>
            <Newspaper className="text-purple-600" size={24} />
          </div>
        </div>

        <div className="bg-white rounded-xl shadow-sm border p-6 hover:shadow-md transition-shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</p>
              <p className="text-2xl font-bold text-rose-600">{stats?.totalEmployees || 0}</p>
            </div>
            <UserCheck className="text-rose-600" size={24} />
          </div>
        </div>

        <div className="bg-white rounded-xl shadow-sm border p-6 hover:shadow-md transition-shadow">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">–û—Ç–¥–µ–ª—ã</p>
              <p className="text-2xl font-bold text-amber-600">{stats?.totalDepartments || 0}</p>
            </div>
            <BarChart3 className="text-amber-600" size={24} />
          </div>
        </div>
      </div>

      {/* –ì—Ä–∞—Ñ–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –∏ –≤—ã—Ä—É—á–∫–∏ */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <div className="flex items-center justify-between mb-6">
          <h3 className="text-lg font-semibold text-gray-900">–ó–∞–∫–∞–∑—ã –∏ –≤—ã—Ä—É—á–∫–∞ (7 –¥–Ω–µ–π)</h3>
          <BarChart3 className="text-gray-400" size={20} />
        </div>
        <div className="h-80">
          <ResponsiveContainer width="100%" height="100%">
            <AreaChart data={prepareOrdersChartData()}>
              <CartesianGrid strokeDasharray="3 3" stroke="#f0f0f0" />
              <XAxis dataKey="date" stroke="#6b7280" fontSize={12} />
              <YAxis yAxisId="left" stroke="#6b7280" fontSize={12} />
              <YAxis yAxisId="right" orientation="right" stroke="#6b7280" fontSize={12} />
              <Tooltip 
                content={({ active, payload, label }) => {
                  if (!active || !payload) return null;
                  return (
                    <div className="bg-white p-3 border rounded-lg shadow-lg">
                      <p className="font-medium">{label}</p>
                      <p className="text-blue-600">–ó–∞–∫–∞–∑—ã: {payload[0]?.value}</p>
                      <p className="text-green-600">–í—ã—Ä—É—á–∫–∞: {formatCurrency(Number(payload[1]?.value) || 0)}</p>
                    </div>
                  );
                }}
              />
              <Area yAxisId="left" type="monotone" dataKey="orders" stroke="#3B82F6" fill="#93C5FD" fillOpacity={0.3} />
              <Area yAxisId="right" type="monotone" dataKey="revenue" stroke="#10B981" fill="#6EE7B7" fillOpacity={0.3} />
            </AreaChart>
          </ResponsiveContainer>
        </div>
      </div>

      <div className="grid grid-cols-1 xl:grid-cols-2 gap-6">
        {/* –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤ */}
        <div className="bg-white rounded-xl shadow-sm border p-6">
          <div className="flex items-center justify-between mb-6">
            <h3 className="text-lg font-semibold text-gray-900">–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤</h3>
            <PieChart className="text-gray-400" size={20} />
          </div>
          <div className="h-96">
            <ResponsiveContainer width="100%" height="100%">
              <RechartsPieChart>
                <Pie
                  data={prepareOrderStatusData()}
                  cx="50%"
                  cy="50%"
                  outerRadius={130}
                  fill="#8884d8"
                  dataKey="value"
                  label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}
                  labelLine={false}
                  fontSize={13}
                >
                  {prepareOrderStatusData().map((entry, index) => (
                    <Cell 
                      key={`cell-${index}`} 
                      fill={STATUS_COLORS[entry.status as keyof typeof STATUS_COLORS] || CHART_COLORS[index % CHART_COLORS.length]} 
                    />
                  ))}
                </Pie>
                <Tooltip 
                  content={({ active, payload }) => {
                    if (!active || !payload || !payload[0]) return null;
                    return (
                      <div className="bg-white p-3 border rounded-lg shadow-lg">
                        <p className="font-medium">{payload[0].name}</p>
                        <p className="text-blue-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {payload[0].value}</p>
                      </div>
                    );
                  }}
                />
              </RechartsPieChart>
            </ResponsiveContainer>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ */}
        <div className="bg-white rounded-xl shadow-sm border p-6">
          <div className="flex items-center justify-between mb-6">
            <h3 className="text-lg font-semibold text-gray-900">–¢–∏–ø—ã –¥–æ—Å—Ç–∞–≤–∫–∏</h3>
            <ShoppingBag className="text-gray-400" size={20} />
          </div>
          <div className="h-96">
            <ResponsiveContainer width="100%" height="100%">
              <RechartsPieChart>
                <Pie
                  data={prepareDeliveryData()}
                  cx="50%"
                  cy="50%"
                  outerRadius={130}
                  fill="#8884d8"
                  dataKey="value"
                  label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}
                  labelLine={false}
                  fontSize={13}
                >
                  {prepareDeliveryData().map((entry, index) => (
                    <Cell 
                      key={`cell-${index}`} 
                      fill={DELIVERY_COLORS[entry.type as keyof typeof DELIVERY_COLORS] || CHART_COLORS[(index + 3) % CHART_COLORS.length]} 
                    />
                  ))}
                </Pie>
                <Tooltip 
                  content={({ active, payload }) => {
                    if (!active || !payload || !payload[0]) return null;
                    return (
                      <div className="bg-white p-3 border rounded-lg shadow-lg">
                        <p className="font-medium">{payload[0].name}</p>
                        <p className="text-green-600">–ó–∞–∫–∞–∑–æ–≤: {payload[0].value}</p>
                      </div>
                    );
                  }}
                />
              </RechartsPieChart>
            </ResponsiveContainer>
          </div>
        </div>
      </div>

      {/* –¢–æ–ø —Ç–æ–≤–∞—Ä—ã */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <div className="flex items-center justify-between mb-6">
          <h3 className="text-lg font-semibold text-gray-900">–¢–æ–ø —Ç–æ–≤–∞—Ä—ã</h3>
          <Award className="text-gray-400" size={20} />
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-4">
          {stats?.topProducts?.slice(0, 5).map((product, index) => (
            <div key={product._id} className="p-4 bg-gray-50 rounded-lg text-center">
              <div className={`w-10 h-10 mx-auto mb-3 rounded-full flex items-center justify-center text-white font-bold ${
                index === 0 ? 'bg-yellow-500' : 
                index === 1 ? 'bg-gray-400' : 
                index === 2 ? 'bg-orange-500' : 'bg-blue-500'
              }`}>
                {index + 1}
              </div>
              <p className="font-medium text-gray-900 text-sm mb-1 line-clamp-2">{product.productName}</p>
              <p className="text-xs text-gray-500 mb-2">–ü—Ä–æ–¥–∞–Ω–æ: {product.totalSold} —à—Ç.</p>
              <p className="font-semibold text-green-600 text-sm">{formatCurrency(product.totalRevenue)}</p>
            </div>
          )) || (
            <p className="text-gray-500 text-center py-8 col-span-full">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö</p>
          )}
        </div>
      </div>

      {/* –ü–æ–¥—Ä–æ–±–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ */}
      <div className="bg-white rounded-xl shadow-sm border p-6">
        <h3 className="text-lg font-semibold text-gray-900 mb-6">–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
        <div className="overflow-x-auto">
        <Table>
          <TableHeader>
            <TableRow>
                <TableHead>–ú–µ—Ç—Ä–∏–∫–∞</TableHead>
                <TableHead>–ó–Ω–∞—á–µ–Ω–∏–µ</TableHead>
                <TableHead>–û–ø–∏—Å–∞–Ω–∏–µ</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            <TableRow>
                <TableCell className="font-medium">–¢–æ–≤–∞—Ä—ã</TableCell>
                <TableCell className="font-semibold">{stats?.totalProducts || 0}</TableCell>
                <TableCell className="text-gray-600">–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ</TableCell>
              </TableRow>
              <TableRow>
                <TableCell className="font-medium">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</TableCell>
                <TableCell className="font-semibold">{stats?.totalUsers || 0}</TableCell>
                <TableCell className="text-gray-600">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</TableCell>
            </TableRow>
            <TableRow>
                <TableCell className="font-medium">–ó–∞–∫–∞–∑—ã</TableCell>
                <TableCell className="font-semibold">{stats?.totalOrders || 0}</TableCell>
                <TableCell className="text-gray-600">–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤</TableCell>
            </TableRow>
            <TableRow>
                <TableCell className="font-medium">–û—Ç–∑—ã–≤—ã</TableCell>
                <TableCell className="font-semibold">{stats?.totalReviews || 0}</TableCell>
                <TableCell className="text-gray-600">–û—Ç–∑—ã–≤—ã –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π</TableCell>
            </TableRow>
            <TableRow>
                <TableCell className="font-medium">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</TableCell>
                <TableCell className="font-semibold">{stats?.totalEmployees || 0}</TableCell>
                <TableCell className="text-gray-600">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏</TableCell>
            </TableRow>
            <TableRow>
                <TableCell className="font-medium">–û—Ç–¥–µ–ª—ã</TableCell>
                <TableCell className="font-semibold">{stats?.totalDepartments || 0}</TableCell>
                <TableCell className="text-gray-600">–û—Ç–¥–µ–ª—ã –∫–æ–º–ø–∞–Ω–∏–∏</TableCell>
            </TableRow>
            <TableRow>
                <TableCell className="font-medium">–ù–æ–≤–æ—Å—Ç–∏</TableCell>
                <TableCell className="font-semibold">{stats?.totalNews || 0}</TableCell>
                <TableCell className="text-gray-600">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏</TableCell>
            </TableRow>
            <TableRow>
                <TableCell className="font-medium">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</TableCell>
                <TableCell className="font-semibold">{formatCurrency(stats?.avgOrderValue || 0)}</TableCell>
                <TableCell className="text-gray-600">–°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞</TableCell>
            </TableRow>
            <TableRow>
                <TableCell className="font-medium">–°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä –∫–æ—Ä–∑–∏–Ω—ã</TableCell>
                <TableCell className="font-semibold">{stats?.avgCartSize?.toFixed(1) || 0} —Ç–æ–≤–∞—Ä–æ–≤</TableCell>
                <TableCell className="text-gray-600">–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ</TableCell>
            </TableRow>
          </TableBody>
        </Table>
        </div>
      </div>

      {/* –§—É—Ç–µ—Ä —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ */}
      <div className="bg-gray-50 rounded-lg p-4 text-center">
        <div className="flex items-center justify-center space-x-4 text-sm text-gray-600">
          <div className="flex items-center space-x-1">
            <Activity className="w-4 h-4" />
            <span>–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</span>
          </div>
          <div className="flex items-center space-x-1">
            <Clock className="w-4 h-4" />
            <span>–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥</span>
          </div>
          {stats?.lastUpdated && (
            <div className="flex items-center space-x-1">
              <Calendar className="w-4 h-4" />
              <span>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {new Date(stats.lastUpdated).toLocaleString('ru-RU')}</span>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
