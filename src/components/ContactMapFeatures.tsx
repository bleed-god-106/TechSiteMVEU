import React, { useState } from 'react';
import { Navigation, MapPin, Clock, Phone, Car, Train } from 'lucide-react';
import { MAPS_CONFIG, getRouteUrl } from '../config/maps';

interface ContactMapFeaturesProps {
  address: string;
}

const ContactMapFeatures: React.FC<ContactMapFeaturesProps> = ({ address }) => {
  const [activeTransport, setActiveTransport] = useState<string>('metro');

  const transportRoutes = {
    metro: {
      icon: Train,
      title: '–ú–µ—Ç—Ä–æ',
      color: 'blue',
              content: (
        <div>
          <p className="font-medium">–°—Ç–∞–Ω—Ü–∏—è "{MAPS_CONFIG.organization.metro}"</p>
          <p className="text-sm text-gray-600">{MAPS_CONFIG.organization.metroLine}</p>
          <p className="text-sm text-gray-600">–í—ã—Ö–æ–¥ ‚Ññ 2, –∑–∞—Ç–µ–º {MAPS_CONFIG.organization.walkingTime} –ø–æ –ö–∞–ª–∞–Ω—á—ë–≤—Å–∫–æ–π —É–ª.</p>
          <div className="mt-2 text-xs text-gray-500">
            <p>üïí –í—Ä–µ–º—è –≤ –ø—É—Ç–∏ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞: ~25 –º–∏–Ω—É—Ç</p>
          </div>
        </div>
      )
    },
    car: {
      icon: Car,
      title: '–ê–≤—Ç–æ–º–æ–±–∏–ª—å',
      color: 'green',
      content: (
        <div>
          <p className="font-medium">–ü–∞—Ä–∫–æ–≤–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è</p>
          <p className="text-sm text-gray-600">–í—ä–µ–∑–¥ —Å –ö–∞–ª–∞–Ω—á—ë–≤—Å–∫–æ–π —É–ª.</p>
          <p className="text-sm text-gray-600">20 –ø–∞—Ä–∫–æ–≤–æ—á–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤</p>
          <div className="mt-2 text-xs text-gray-500">
            <p>üÖøÔ∏è –û—Ö—Ä–∞–Ω—è–µ–º–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è</p>
            <p>‚ôø –ú–µ—Å—Ç–∞ –¥–ª—è –ª—é–¥–µ–π —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏</p>
          </div>
        </div>
      )
    },
    bus: {
      icon: Navigation,
      title: '–ê–≤—Ç–æ–±—É—Å',
      color: 'purple',
      content: (
        <div>
          <p className="font-medium">–û—Å—Ç–∞–Ω–æ–≤–∫–∞ "–ö–∞–ª–∞–Ω—á—ë–≤—Å–∫–∞—è —É–ª."</p>
          <p className="text-sm text-gray-600">–ê–≤—Ç–æ–±—É—Å—ã: ‚Ññ 40, 122, 935</p>
          <p className="text-sm text-gray-600">2 –º–∏–Ω—É—Ç—ã –ø–µ—à–∫–æ–º –æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏</p>
          <div className="mt-2 text-xs text-gray-500">
            <p>üïí –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–≤–∏–∂–µ–Ω–∏—è: 10-15 –º–∏–Ω—É—Ç</p>
          </div>
        </div>
      )
    }
  };

  const openInYandexNavigator = () => {
    const [lat, lon] = MAPS_CONFIG.organization.coordinates;
    const url = getRouteUrl(lat, lon, address);
    window.open(url, '_blank');
  };

  const openIn2GIS = () => {
    const url = MAPS_CONFIG.externalMaps.gis2(address);
    window.open(url, '_blank');
  };

  const openInGoogleMaps = () => {
    const url = MAPS_CONFIG.externalMaps.google(address);
    window.open(url, '_blank');
  };

  return (
    <div className="mt-6 space-y-4">
      {/* –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã */}
      <div>
        <h4 className="font-semibold mb-3 flex items-center">
          <MapPin className="w-4 h-4 mr-2 text-blue-600" />
          –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è
        </h4>
        
        {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ */}
        <div className="flex space-x-2 mb-4">
          {Object.entries(transportRoutes).map(([key, route]) => {
            const IconComponent = route.icon;
            const isActive = activeTransport === key;
            
            return (
              <button
                key={key}
                onClick={() => setActiveTransport(key)}
                className={`flex items-center px-3 py-2 rounded-lg text-sm font-medium transition-colors ${
                  isActive 
                    ? `bg-${route.color}-100 text-${route.color}-700 border-${route.color}-200 border`
                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                }`}
              >
                <IconComponent className="w-4 h-4 mr-1.5" />
                {route.title}
              </button>
            );
          })}
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ */}
        <div className={`bg-${transportRoutes[activeTransport as keyof typeof transportRoutes].color}-50 border border-${transportRoutes[activeTransport as keyof typeof transportRoutes].color}-200 rounded-lg p-4`}>
          {transportRoutes[activeTransport as keyof typeof transportRoutes].content}
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ä—Ç–∞—Ö */}
      <div>
        <h4 className="font-semibold mb-3 flex items-center">
          <Navigation className="w-4 h-4 mr-2 text-green-600" />
          –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç
        </h4>
        
        <div className="grid grid-cols-1 sm:grid-cols-3 gap-3">
          <button
            onClick={openInYandexNavigator}
            className="flex items-center justify-center px-4 py-3 bg-red-50 hover:bg-red-100 border border-red-200 rounded-lg text-red-700 font-medium transition-colors"
          >
            <span className="mr-2">üó∫Ô∏è</span>
            –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç—ã
          </button>
          
          <button
            onClick={openIn2GIS}
            className="flex items-center justify-center px-4 py-3 bg-green-50 hover:bg-green-100 border border-green-200 rounded-lg text-green-700 font-medium transition-colors"
          >
            <span className="mr-2">üìç</span>
            2–ì–ò–°
          </button>
          
          <button
            onClick={openInGoogleMaps}
            className="flex items-center justify-center px-4 py-3 bg-blue-50 hover:bg-blue-100 border border-blue-200 rounded-lg text-blue-700 font-medium transition-colors"
          >
            <span className="mr-2">üåç</span>
            Google Maps
          </button>
        </div>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="bg-gray-50 rounded-lg p-4">
        <h4 className="font-semibold mb-2 flex items-center">
          <Clock className="w-4 h-4 mr-2 text-purple-600" />
          –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        </h4>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-3 text-sm text-gray-600">
          <div className="flex items-start">
            <span className="mr-2">üè¢</span>
            <div>
              <p className="font-medium">–í—Ö–æ–¥ –≤ –º–∞–≥–∞–∑–∏–Ω</p>
              <p>–° –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞—Å–∞–¥–∞ –∑–¥–∞–Ω–∏—è, 1 —ç—Ç–∞–∂</p>
            </div>
          </div>
          
          <div className="flex items-start">
            <span className="mr-2">‚ôø</span>
            <div>
              <p className="font-medium">–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</p>
              <p>–ü–∞–Ω–¥—É—Å, –ª–∏—Ñ—Ç, —à–∏—Ä–æ–∫–∏–µ –ø—Ä–æ—Ö–æ–¥—ã</p>
            </div>
          </div>
          
          <div className="flex items-start">
            <span className="mr-2">üìû</span>
            <div>
              <p className="font-medium">–ï—Å–ª–∏ –∑–∞–±–ª—É–¥–∏–ª–∏—Å—å</p>
              <p>–ó–≤–æ–Ω–∏—Ç–µ: {MAPS_CONFIG.organization.phone}</p>
            </div>
          </div>
          
          <div className="flex items-start">
            <span className="mr-2">üïí</span>
            <div>
              <p className="font-medium">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</p>
              <p>{MAPS_CONFIG.organization.workingHours}</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ContactMapFeatures; 